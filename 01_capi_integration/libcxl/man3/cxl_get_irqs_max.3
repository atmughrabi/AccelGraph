.\" Copyright 2015-2017 IBM Corp.
.\"
.TH CXL_GET_IRQS_MAX 3 2017-05-24 "LIBCXL 1.5" "CXL Programmer's Manual"
.SH NAME
cxl_get_irqs_max \- get the maximum number of AFU interrupts available to a context, if it was the only context running
.SH SYNOPSIS
.B #include <libcxl.h>
.PP
.B "int cxl_get_irqs_max(struct cxl_afu_h"
.BI * afu ", long *" valp );
.SH DESCRIPTION
.BR cxl_get_irqs_max ()
copies to the long integer pointed to by
.I valp
the maximum number of AFU interrupts available to a context of
.IR afu ,
if it was the only context running.
.PP
This is the maximum number of interrupts that may be requested
when calling
.BR cxl_afu_attach_full ()
or
.BR cxl_afu_attach_work ()
for
.IR afu .
The default on probe is the maximum that hardware can support.
It can be administratively restricted with
.BR cxl_set_irqs_max ().
.SH RETURN VALUE
On success, 0 is returned.
On error, \-1 is returned and
.I errno
is set appropriately.
.SH ERRORS
.TP
.B EINVAL
Invalid argument value.
.TP
.B ENOMEM
Insufficient memory.
.SH SEE ALSO
.BR cxl (3),
.BR cxl_afu_attach (3),
.BR cxl_afu_attach_full (3),
.BR cxl_afu_attach_work (3),
.BR cxl_get_irqs_min (3),
.BR cxl_get_mode (3),
.BR cxl_get_modes_supported (3),
.BR cxl_get_prefault_mode (3),
.BR cxl_set_irqs_max (3),
.BR cxl_work_set_num_irqs (3)
